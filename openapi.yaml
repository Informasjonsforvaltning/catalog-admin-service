openapi: 3.0.2
info:
  title: Catalog admin service
  description: Administration of catalogs
  version: '1.0'
  termsOfService: 'https://fellesdatakatalog.digdir.no/about'
  contact:
    name: Digitaliseringsdirektoratet
    url: 'https://fellesdatakatalog.digdir.no'
    email: fellesdatakatalog@digdir.no
  license:
    name: License of API
    url: 'http://data.norge.no/nlod/no/2.0'
externalDocs:
  description: Dokumentasjon p√• Informasjonsforvaltning GitHub
  url: https://informasjonsforvaltning.github.io/
tags:
  - name: catalog-admin-service
    description: Catalog admin service
servers:
  - url: 'https://catalog-admin-api.fellesdatakatalog.digdir.no'
paths:
  /{catalogId}/concepts/code-lists:
    post:
      tags:
        - catalog-admin-service
      summary: Create concept code-list
      description: Create concept code-list
      operationId: createCodeList
      parameters:
        - name: catalogId
          in: path
          description: catalog id
          required: true
          schema:
            type: string
      responses:
        '201':
          description: No content
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CodeList'
    get:
      tags:
        - catalog-admin-service
      summary: Get concept code lists.
      description: Returns all concept code lists
      operationId: getCodeLists
      parameters:
        - name: catalogId
          in: path
          description: catalog id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CodeLists'
  /{catalogId}/concepts/code-lists/{codeListId}:
    get:
      tags:
        - catalog-admin-service
      description: Get concept code list
      operationId: getCodeList
      parameters:
        - name: catalogId
          in: path
          description: catalog id
          required: true
          schema:
            type: string
        - name: codeListId
          in: path
          description: code list id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CodeList'
    patch:
      tags:
        - catalog-admin-service
      description: Update code list
      operationId: updateCodeList
      parameters:
        - name: catalogId
          in: path
          description: catalog id
          required: true
          schema:
            type: string
        - name: codeListId
          in: path
          description: code list id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JsonPatch'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CodeList"
    delete:
      tags:
        - catalog-admin-service
      description: Delete code  list
      operationId: deleteCodeList
      parameters:
        - name: catalogId
          in: path
          description: catalog id
          required: true
          schema:
            type: string
        - name: codeListId
          in: path
          description: code list id
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No Content

  /{catalogId}/concepts/fields:
    get:
      tags:
        - catalog-admin-service
      summary: Get concept fields.
      description: Returns concept fields
      operationId: getFields
      parameters:
        - name: catalogId
          in: path
          description: catalog id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Fields'
  /{catalogId}/concepts/fields/editable:
    patch:
      tags:
        - catalog-admin-service
      summary: Update editable fields
      description: Update editable fields
      operationId: updateEditableFields
      parameters:
        - name: catalogId
          in: path
          description: catalog id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JsonPatch'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EditableFields"
  /{catalogId}/concepts/fields/internal:
    post:
      tags:
        - catalog-admin-service
      summary: Create concept field
      description: Create concept field
      operationId: createField
      parameters:
        - name: catalogId
          in: path
          description: catalog id
          required: true
          schema:
            type: string
      responses:
        '201':
          description: No content
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Field'
  /{catalogId}/concepts/fields/internal/{fieldId}:
    get:
      tags:
        - catalog-admin-service
      description: Get concept Field
      operationId: getField
      parameters:
        - name: catalogId
          in: path
          description: catalog id
          required: true
          schema:
            type: string
        - name: fieldId
          in: path
          description: field id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Field'
    patch:
      tags:
        - catalog-admin-service
      description: Update field
      operationId: updateField
      parameters:
        - name: catalogId
          in: path
          description: catalog id
          required: true
          schema:
            type: string
        - name: fieldId
          in: path
          description: field id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JsonPatch'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Field"
    delete:
      tags:
        - catalog-admin-service
      description: Delete concept field
      operationId: deleteField
      parameters:
        - name: catalogId
          in: path
          description: catalog id
          required: true
          schema:
            type: string
        - name: fieldId
          in: path
          description: field id
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No Content

  /{catalogId}/design:
    get:
      tags:
        - catalog-admin-service
      summary: Get catalog design settings.
      description: Returns catalog design settings.
      parameters:
        - name: catalogId
          in: path
          description: catalog id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Design'
    patch:
      tags:
        - catalog-admin-service
      summary: Update design settings for the catalog
      description: Update design settings for the catalog
      operationId: updateSettings
      parameters:
        - name: catalogId
          in: path
          description: catalog id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JsonPatch'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Design'
  /{catalogId}/design/logo:
    post:
      tags:
        - catalog-admin-service
      summary: Update logo for the catalog
      description: Update logo for the catalog
      operationId: updateLogo
      parameters:
        - name: catalogId
          in: path
          description: catalog id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: No content
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                logo:
                  type: string
                  format: binary
    get:
      tags:
        - catalog-admin-service
      summary: Get catalog logo.
      description: Returns catalog logo.
      parameters:
        - name: catalogId
          in: path
          description: catalog id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            image/png:
              schema:
                type: string
                format: binary
            image/svg+xml:
              schema:
                type: string
                format: binary
  /{catalogId}/user-list:
    get:
      tags:
        - catalog-admin-service
      summary: Get catalog user list.
      description: Returns catalog user list.
      parameters:
        - name: catalogId
          in: path
          description: catalog id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
    post:
      tags:
        - catalog-admin-service
      summary: Create user for the catalog
      description: Create user for the catalog
      operationId: updateSettings
      parameters:
        - name: catalogId
          in: path
          description: catalog id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: No content
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
  /{catalogId}/user-list/{userId}:
    get:
      tags:
        - catalog-admin-service
      summary: Get catalog user by id.
      description: Returns catalog user by id.
      parameters:
        - name: catalogId
          in: path
          description: catalog id
          required: true
          schema:
            type: string
        - name: userId
          in: path
          description: user id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            image/png:
              schema:
                type: string
                format: binary
            image/svg+xml:
              schema:
                type: string
                format: binary
    patch:
      tags:
        - catalog-admin-service
      description: Update field
      operationId: updateField
      parameters:
        - name: catalogId
          in: path
          description: catalog id
          required: true
          schema:
            type: string
        - name: userId
          in: path
          description: user id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JsonPatch'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
      delete:
        tags:
          - catalog-admin-service
        description: Delete user
        operationId: deleteCodeList
        parameters:
          - name: catalogId
            in: path
            description: catalog id
            required: true
            schema:
              type: string
          - name: userId
            in: path
            description: user id
            required: true
            schema:
              type: string
        responses:
          '204':
            description: No Content

components:
  schemas:
    CodeLists:
      type: object
      description: List of code lists
      properties:
        codeLists:
          type: array
          items:
            $ref: '#/components/schemas/CodeList'
          description: List of code lists

    CodeList:
      type: object
      description: Concept code list
      properties:
        id:
          type: string
          description: code list id
        name:
          type: string
          description: code list name
        description:
          type: string
          description: code list description
        codes:
          type: array
          items:
            $ref: '#/components/schemas/Code'
          description: List of codes

    Code:
      type: object
      description: Code in a code list
      properties:
        id:
          type: string
          description: code id
        parent:
          type: string
          description: parent code id
        name:
          $ref: "#/components/schemas/MultilanguageTexts"

    Fields:
      type: object
      description: List of concept fields
      properties:
        editable:
          $ref: "#/components/schemas/EditableFields"
        internal:
          type: array
          items:
            $ref: '#/components/schemas/Field'

    EditableFields:
      type: object
      description: List of concept fields
      properties:
        catalogId:
          type: string
          description: catalog id
        domainCodeListId:
          type: string
          description: id of associated code list for the domain field

    Field:
      type: object
      description: Concept field
      properties:
        id:
          type: string
          description: field id
        catalogId:
          type: string
          description: catalog id
        label:
          $ref: "#/components/schemas/MultilanguageTexts"
        description:
          $ref: "#/components/schemas/MultilanguageTexts"
        codeListId:
          type: string
          description: id to associated code list for fields with type CODE
        type:
          type: string
          enum: [ boolean, text_short, text_long, code_list, user_list ]
        location:
          type: string
          enum: [ main_column, right_column ]

    MultilanguageTexts:
      description: A generic object to hold multilanguage texts, that has language code (according to ISO 639-1) as keys
      type: object
      additionalProperties: { }

    JsonPatch:
      description: 'A JSON Schema describing a JSON Patch (https://tools.ietf.org/html/rfc6902)'
      type: array
      items:
        $ref: '#/components/schemas/JsonPatchOperation'

    JsonPatchOperation:
      type: object
      description: 'A JSON patch document as defined by RFC 6902'
      required:
        - op
        - path
      properties:
        op:
          type: string
          nullable: false
          description: 'The operation to be performed'
          enum:
            - add
            - remove
            - replace
            - move
            - copy
            - test
        path:
          type: string
          nullable: false
          description: 'A JSON pointer to the property being affected'
        value:
          type: object
          description: 'The value to add, replace or test.'
        from:
          description: 'A JSON Pointer path pointing to the location to move/copy from.'
          type: string

    Design:
      description: 'Design configuration for the catalog'
      type: object
      properties:
        backgroundColor:
          type: string
        fontColor:
          type: string
        logoDescription:
          type: string
        catalogId:
          type: string
        hasLogo:
          type: boolean

    User:
      description: 'User in the catalog'
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        telephone:
          type: number
